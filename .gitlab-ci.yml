default:
  image: debian:stable
  tags:
    - ec2-docker

stages:
  - test
  - publish

include:
  # Run all tasks on merge requests rather than branches
  # See https://docs.gitlab.com/ee/ci/yaml/README.html#workflowrules-templates
  - template: "Workflows/MergeRequest-Pipelines.gitlab-ci.yml"
  - project: rigetti/qcs/utilities/qcs-ci-toolkit
    file: gitlab-ci/git/setup.yaml
  - project: rigetti/qcs/utilities/qcs-ci-toolkit
    file: gitlab-ci/knope/install.yaml
  - project: rigetti/qcs/utilities/qcs-ci-toolkit
    file: gitlab-ci/protoc/install.yaml

.install_deps: &install_deps
  - apt-get update -y
  - apt-get install -y zip curl git

Check:
  stage: test
  image: 216842466810.dkr.ecr.us-west-1.amazonaws.com/qcs-rust-ci:latest
  before_script:
    - *install_deps
    - !reference [.install_protoc]
  script:
    - cargo --version
    - cargo fmt --check
    - cargo test
    - cargo clippy

Release:
  stage: publish
  image: 216842466810.dkr.ecr.us-west-1.amazonaws.com/qcs-rust-ci:latest
  variables:
    GIT_DEPTH: 0
  before_script:
    - *install_deps
    - !reference [.setup_git]
    - git_config_insteadof "${CI_PROJECT_PATH}" "${API_CLIENT_PUSH_TOKEN}"
    - !reference [.install_protoc]
    - !reference [.install_knope]
  script:
    - git checkout $CI_COMMIT_BRANCH  # Have to be on branch to push back
    - knope release
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      # We cut new releases manually to avoid unnecessary versions & releases from immaterial changes
      when: manual

Release Dry Run:
  stage: publish
  image: 216842466810.dkr.ecr.us-west-1.amazonaws.com/qcs-rust-ci:latest
  variables:
    GIT_DEPTH: 0
  before_script:
    - *install_deps
    - !reference [.setup_git]
    - git_config_insteadof "${CI_PROJECT_PATH}" "${API_CLIENT_PUSH_TOKEN}"
    - !reference [.install_protoc]
    - !reference [.install_knope]
  script:
    - git checkout $CI_COMMIT_BRANCH  # Have to be on branch to push back
    - knope release --dry-run
