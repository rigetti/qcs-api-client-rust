default:
  image: debian:stable
  tags:
    - ec2-docker

stages:
  - test
  - publish

include:
  # Run all tasks on merge requests rather than branches
  # See https://docs.gitlab.com/ee/ci/yaml/README.html#workflowrules-templates
  - template: "Workflows/MergeRequest-Pipelines.gitlab-ci.yml"

.install-knope: &install-knope
  - apt update && apt install -y wget git
  - wget https://github.com/knope-dev/knope/releases/download/$KNOPE_VERSION/knope-x86_64-unknown-linux-musl-$KNOPE_VERSION.tgz
  - tar -xvf knope-x86_64-unknown-linux-musl-$KNOPE_VERSION.tgz
  - cp knope-x86_64-unknown-linux-musl-$KNOPE_VERSION/knope .
  - chmod +x knope
  - rm -rf knope-x86_64-unknown-linux-musl-$KNOPE_VERSION
  - rm knope-x86_64-unknown-linux-musl-$KNOPE_VERSION.tgz

.git_setup: &git_setup
  - ': ${QCS_GITLAB_DEPLOY_KEY:?Must provide \$QCS_GITLAB_DEPLOY_KEY}'
  - git config --global user.email "$GITLAB_USER_EMAIL"
  - git config --global user.name  "$GITLAB_USER_NAME"
  - eval $(ssh-agent -s)
  - chmod 0600 $QCS_GITLAB_DEPLOY_KEY
  - ssh-add $QCS_GITLAB_DEPLOY_KEY
  - mkdir -p ~/.ssh
  - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
  - git remote set-url --push origin "git@gitlab.com:$CI_PROJECT_PATH.git"
  - git remote -v

Check Public:
  stage: test
  image: rust:latest
  script:
    - cargo --version
    - cargo check --manifest-path qcs-api-client-openapi/public/Cargo.toml

Check Internal:
    stage: test
    image: rust:latest
    script:
        - cargo --version
        - cargo check --manifest-path qcs-api-client-openapi/internal/Cargo.toml

# We only publish tagged releases to PyPI
Release:
  stage: publish
  script:
    - *install-knope
    - *git_setup
    - git checkout $CI_COMMIT_BRANCH  # Have to be on branch to push back
    - cd qcs-api-client-openapi
    - ./knope release
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - if: "$CI_COMMIT_BRANCH == $CI_DEFAULT_BRANCH"
      # We cut new releases manually to avoid unnecessary versions & releases from immaterial changes
      when: manual
