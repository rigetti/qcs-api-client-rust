name: "Base Python Release"
description: "Common tasks required to release python wheels on any platform"

inputs:
  artifact-key:
    description: "Unique upload-artifact key. Example: 'macos' or 'linux-x86_64'"
  python-architecture:
    description: "Python architecture used for script steps. Example: 'x86_64'"
  rust-target:
    description: "Rust target used for script steps. Example: 'x86_64-unknown-linux-gnu'"
  maturin-command:
    default: build
    description: "Maturin command used, `build` or `sdist`"
  maturin-args:
    description: "Additional maturin command arguments. Example: '--release'"
  maturin-target:
    description: "Rust target used for maturin compilation. Example: 'x86_64-unknown-linux-gnu'"
  repo-token:
    description: "A valid GitHub token."


runs:
  using: "composite"
  steps:
  - uses: actions/setup-python@v4
    with:
      python-version: "3.12"
      architecture: ${{ inputs.python-architecture }} 
  - name: Install Rust toolchain 
    uses: actions-rs/toolchain@v1 
    with: 
      toolchain: stable 
      target: ${{ inputs.rust-target }}
      profile: minimal 
      default: true 
  - name: Install protoc
    uses: arduino/setup-protoc@v1
    with:
      repo-token: ${{ inputs.repo-token }}
      version: '3.20.1'

  # must be build or sdist
  - if: inputs.maturin-command == 'build'
    name: Maturin - Build
    uses: messense/maturin-action@v1
    with:
      manylinux: '2_28'
      command: ${{ inputs.maturin-command }}
      target: ${{ inputs.maturin-target }}
      args: -i 3.8 3.9 3.10 3.11 3.12 --release --manifest-path qcs-api-client-common/Cargo.toml --out dist
      docker-options: -e CI
  - if: inputs.maturin-command == 'sdist'
    name: Maturin - Source Distribution
    uses: messense/maturin-action@v1
    with:
      manylinux: '2_28'
      command: ${{ inputs.maturin-command }}
      target: ${{ inputs.maturin-target }}
      args: --manifest-path qcs-api-client-common/Cargo.toml --out dist

  # host will not be able to install wheel in this case
  - if: inputs.maturin-target != 'ppc64le' && inputs.maturin-target != 'aarch64'
    name: Install wheel
    shell: bash
    run: |
      pip install qcs-api-client-common --find-links dist --force-reinstall
  - name: Upload wheels 
    uses: actions/upload-artifact@v4
    with:
      name: wheels-${{ inputs.artifact-key }}
      path: dist/
