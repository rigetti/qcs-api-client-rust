syntax = "proto3";
package models.controller;
option go_package = "gitlab.com/rigetti/share/service-model/golang/controller";

// An expression which may be computed to a numerical value
// with respect to the values of variables in the context in which it is evaluated.
message StructuredExpression {

    /// Terms are provided in reverse polish notation (RPN) style: an operator operates
    /// on the terms which precede it.
    repeated .models.controller.StructuredExpression.Term terms = 1;

    /// A reference to member of an array variable
    message ArrayMember {
        string identifier = 1;
        uint32 index = 2;
    }
    message Term {
        oneof term {
            double constant = 1;
            .models.controller.StructuredExpression.ArrayMember array_member = 3;
            .models.controller.StructuredExpression.BinaryOperator binary_operator = 4;
        }
    }

    // An infix operation on two expressions.
    //
    // ```text
    // left operator right
    // ```
    enum BinaryOperator {
        UNKNOWN = 0;
        ADD = 1;
        SUBTRACT = 2;
        MULTIPLY = 3;
        DIVIDE = 4;
        EXPONENTIATE = 5;
    }
}
